name: Build and Upload Artifact

on:
  workflow_dispatch:
    inputs:
      partner_chains_smart_contracts_sha:
        description: "partner-chains-smart-contracts commit SHA or branch to build from"
      partner-chains-smart-contracts-tag:
        description: "partner-chains-smart-contract release tag to append to artifact name"
        required: true
      create_draft_release_page:
        description: "Create a draft release page"
        required: false
        default: "false"

jobs:
  check-release:
    if: ${{ github.event.inputs.create_draft_release_page == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
    steps:
      - name: Check if release already exists
        id: check_release
        run: |
          tag="${{ github.event.inputs.partner-chains-smart-contracts-tag }}"
          release_response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
          if echo "$release_response" | grep -q '"message": "Not Found"'; then
            echo "release_exists=false" >> $GITHUB_ENV
            echo "::set-output name=release_exists::false"
          else
            echo "release_exists=true" >> $GITHUB_ENV
            echo "::set-output name=release_exists::true"
          fi

  create-release:
    if: ${{ github.event.inputs.create_draft_release_page == 'true' && needs.check-release.outputs.release_exists == 'false' }}
    needs: check-release
    runs-on: ubuntu-latest
    steps:
      - name: Create draft release
        id: create_release
        run: |
          tag="${{ github.event.inputs.partner-chains-smart-contracts-tag }}"
          release_response=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              -d '{"tag_name": "'$tag'", "name": "'$tag'", "body": "Draft release for '$tag'", "draft": true}' \
                              "https://api.github.com/repos/${{ github.repository }}/releases")
          echo "release_id=$(echo $release_response | jq -r .id)" >> $GITHUB_ENV
          echo "::set-output name=release_id::$(echo $release_response | jq -r .id)"

  partner-chains-smart-contracts-build:
    runs-on: [self-hosted, nixos]
    needs: create-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}

      - name: Build
        run: nix build ./#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts
          path: result/release.zip

      - name: Upload artifact to release
        if: ${{ github.event.inputs.create_draft_release_page == 'true' && env.release_id != '' }}
        run: |
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"result/release.zip" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.release_id }}/assets?name=release.zip"

  partner-chains-smart-contracts-process:
    runs-on: ubuntu-latest
    needs: partner-chains-smart-contracts-build
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          echo "SIDECHAIN_MAIN_CLI=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}" >> $GITHUB_ENV
          
      - name: Download release.zip
        uses: actions/download-artifact@v4
        with:
          name: partner-chains-smart-contracts
          path: ./artifact

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: partner-chains-smart-contracts
  
      - name: Unzip release.zip
        run: |
          mkdir -p artifact/unzipped
          unzip artifact/release.zip -d artifact/unzipped
          
      - name: Rename sidechain-cli to sidechain-main-cli
        run: |
          mv artifact/unzipped/sidechain-cli artifact/unzipped/sidechain-main-cli
  
      - name: Upload Renamed Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI }}
          path: artifact/unzipped/
          
      - name: Upload artifact to release
        if: ${{ github.event.inputs.create_draft_release_page == 'true' }}
        run: |
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"artifact/unzipped/sidechain-main-cli" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ needs.create-release.outputs.release_id }}/assets?name=sidechain-main-cli"

