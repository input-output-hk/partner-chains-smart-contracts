name: Build and Upload Artifact

on:
  workflow_dispatch:
    inputs:
      partner_chains_smart_contracts_sha:
        description: "partner-chains-smart-contracts commit SHA or branch to build from"
      partner-chains-smart-contracts-tag:
        description: "partner-chains-smart-contract release tag to append to artifact name"
        required: true
      create_draft_release_page:
        description: "Create a draft release page"
        required: false
        default: "false"

jobs:
  partner-chains-smart-contracts-x86_64-linux:
    runs-on: [self-hosted, nixos]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}

      - name: Build
        run: nix build ./#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts-x86_64-linux
          path: result/release.zip

  partner-chains-smart-contracts-macos-x86_64:
    runs-on: [self-hosted, MacOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}

      - name: Build
        run: nix build ./#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts-macos-x86_64
          path: result/release.zip

  partner-chains-smart-contracts-macos-arm64:
    runs-on: [self-hosted, MacOS]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}

      - name: Build
        run: nix build ./#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts-macos-arm64
          path: result/release.zip

  partner-chains-smart-contracts-process:
    runs-on: ubuntu-latest
    needs: [partner-chains-smart-contracts-x86_64-linux, partner-chains-smart-contracts-macos-x86_64, partner-chains-smart-contracts-macos-arm64]
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          echo "SIDECHAIN_MAIN_CLI_LINUX=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-x86_64-linux" >> $GITHUB_ENV
          echo "SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
          echo "SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
          
      - name: Download x86_64-linux artifact
        uses: actions/download-artifact@v4
        with:
          name: partner-chains-smart-contracts-x86_64-linux
          path: ./x86_64-linux

      - name: Download macos-x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: partner-chains-smart-contracts-macos-x86_64
          path: ./macos-x86_64
          
      - name: Download macos-arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: partner-chains-smart-contracts-macos-arm64
          path: ./macos-arm64

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: partner-chains-smart-contracts-x86_64-linux

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: partner-chains-smart-contracts-macos-x86_64

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: partner-chains-smart-contracts-macos-arm64       
  
      - name: Unzip release.zip
        run: |
          mkdir -p ./x86_64-linux/unzipped
          mkdir -p ./macos-x86_64/unzipped
          mkdir -p ./macos-arm64/unzipped
          unzip ./x86_64-linux/release.zip -d ./x86_64-linux/unzipped
          unzip ./macos-x86_64/release.zip -d ./macos-x86_64/unzipped
          unzip ./macos-arm64/release.zip -d ./macos-arm64/unzipped
          
      - name: Rename sidechain-cli to sidechain-main-cli
        run: |
          mv ./x86_64-linux/unzipped/sidechain-cli ./x86_64-linux/unzipped/sidechain-main-cli
          mv ./macos-x86_64/unzipped/sidechain-cli ./macos-x86_64/unzipped/sidechain-main-cli
          mv ./macos-arm64/unzipped/sidechain-cli ./macos-arm64/unzipped/sidechain-main-cli
  
      - name: Upload Renamed x86_64-linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_LINUX }}
          path: ./x86_64-linux/unzipped/

      - name: Upload Renamed macos-x86_64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN }}
          path: ./macos-x86_64/unzipped/

      - name: Upload Renamed macos-arm64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN }}
          path: ./macos-arm64/unzipped/
    
  release:
    runs-on: ubuntu-latest
    needs: partner-chains-smart-contracts-process
    if: ${{ github.event.inputs.create_draft_release_page == 'true' }}
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          echo "SIDECHAIN_MAIN_CLI_LINUX=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-x86_64-linux" >> $GITHUB_ENV
          echo "SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
          echo "SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
  
      - name: Download renamed x86_64-linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_LINUX }}
          path: ./linux

      - name: Download renamed macos-x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN }}
          path: ./macos-x86_64

      - name: Download renamed macos-arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN }}
          path: ./macos-arm64
  
      - name: Zip the artifact directories
        run: |
          cd linux
          zip -r "../${{ env.SIDECHAIN_MAIN_CLI_LINUX }}.zip" ./*
          cd ../macos-x86_64
          zip -r "../${{ env.SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN }}.zip" ./*
          cd ../macos-arm64
          zip -r "../${{ env.SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN }}.zip" ./*
          cd ..
  
      - name: Check if release already exists
        id: check_release
        run: |
          tag="${{ github.event.inputs.partner-chains-smart-contracts-tag }}"
          release_response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
          if echo "$release_response" | grep -q '"message": "Not Found"'; then
            echo "release_exists=false" >> $GITHUB_ENV
            echo "::set-output name=release_exists::false"
          else
            echo "release_exists=true" >> $GITHUB_ENV
            echo "::set-output name=release_exists::true"
            echo "release_id=$(echo $release_response | jq -r .id)" >> $GITHUB_ENV
            echo "::set-output name=release_id::$(echo $release_response | jq -r .id)"
          fi
  
      - name: Create draft release
        id: create_release
        if: ${{ steps.check_release.outputs.release_exists == 'false' }}
        run: |
          tag="${{ github.event.inputs.partner-chains-smart-contracts-tag }}"
          release_response=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              -d '{"tag_name": "'$tag'", "name": "'$tag'", "body": "Draft release for '$tag'", "draft": true}' \
                              "https://api.github.com/repos/${{ github.repository }}/releases")
          echo "release_id=$(echo $release_response | jq -r .id)" >> $GITHUB_ENV
          echo "::set-output name=release_id::$(echo $release_response | jq -r .id)"

      - name: Upload zipped artifacts to release
        if: ${{ steps.check_release.outputs.release_exists == 'true' || steps.create_release.outputs.release_id != '' }}
        run: |
          release_id="${{ steps.create_release.outputs.release_id }}"
          if [ -z "$release_id" ]; then
            release_id="${{ steps.check_release.outputs.release_id }}"
          fi
  
          for artifact in "${{ env.SIDECHAIN_MAIN_CLI_LINUX }}.zip" \
                          "${{ env.SIDECHAIN_MAIN_CLI_X86_64_APPLE_DARWIN }}.zip" \
                          "${{ env.SIDECHAIN_MAIN_CLI_AARCH64_APPLE_DARWIN }}.zip"; do
            curl -s -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$artifact" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$(basename $artifact)"
          done
