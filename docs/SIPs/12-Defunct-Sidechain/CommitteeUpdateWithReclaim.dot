strict digraph {
  node [shape=record]
  graph [nodesep="1", ranksep="0.5"]

  currentCommittee [ label = "UpdateCommitteeValidator with the\n CommitteeHashPolicy NFT with datum\n UpdateCommitteeDatum aggregatePubKeys" ];
  transaction [ label = "Transaction", shape=diamond ];
  committeeCertificateVerificationMintingPolicy [label = "Committee Certificate\nVerification Minting\nPolicy"];
  fanoutToken [label = "FanoutToken"];
  burnAddress [ label = "Burn address"];
  newCommittee [ label = "New committee address with the\n CommitteeHashPolicy NFT with datum\nUpdateCommitteeDatum GarbageAggregatePubKeys"];

  currentCommittee  -> transaction [xlabel = "input"];
  currentCommittee -> committeeCertificateVerificationMintingPolicy [ style = dashed, xlabel = "checks if\ntoken is minted" ];
  committeeCertificateVerificationMintingPolicy:ne -> currentCommittee:se [ style = dashed, xlabel = "searches for" ];
  transaction -> committeeCertificateVerificationMintingPolicy [ xlabel = "mints" ];
  committeeCertificateVerificationMintingPolicy -> burnAddress [ xlabel = "is paid to", style=dashed ];
  transaction -> newCommittee [ xlabel = "output" ];
  transaction -> burnAddress [ xlabel = "output" ];
  transaction -> fanoutToken [ label = "mints only if sufficient time has passed and\n its token name matches the fundReclaimMerkleRoot" ];
}
