digraph {
  node [shape=record]

  InputMerkleRoot [ label = "UTxO with a signed Merkle root"];
  UserWallet [label = "User wallet"];
  InputLockBox [label = "Lock box with tokens"];
  OutputLockBox [label = "Lock box with remaining tokens"];
  EcdsaSecp256k1ReclaimValidator [ label="EcdsaSecp256k1ReclaimValidator\nparameterized by sidechain public key"];

  MerkleRootClaimingTx [ label = "Transaction", shape=diamond];
  EcdsaSecp256k1ReclaimTx [ label = "Transaction", shape=diamond];

  subgraph cluster_MerkleRootClaiming {
    label="Merkle root claim transaction"
    style=rounded

    InputMerkleRoot -> MerkleRootClaimingTx [ label = "reference input" ];
    InputLockBox -> MerkleRootClaimingTx [ label = "input" ];
    MerkleRootClaimingTx -> OutputLockBox [ label = "output" ];
  }

  MerkleRootClaimingTx -> EcdsaSecp256k1ReclaimValidator [ label = "output" ];

  subgraph cluster_EcdsaSecp256k1Reclaim {
    label="ECDSA SECP256k1 reclaim transaction"
    labelloc="bot"
    style=rounded
    EcdsaSecp256k1ReclaimValidator -> EcdsaSecp256k1ReclaimTx [ label = "input" ];
    EcdsaSecp256k1ReclaimTx ->  UserWallet;
  }
}
