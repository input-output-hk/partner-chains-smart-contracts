strict digraph {
  node [shape=record]
  graph [nodesep="1", ranksep="1"]

  DistributedSetNode [ label = "Distributed set node"];
  MerkleRoot [ label = "Merkle root of `MerkleTreeEntry`s"];
  LockBoxValidator1 [ label = "LockBoxValidator with `ki` `MCToken`s\nuniquely identified with `LockBoxOracleMintingPolicy`"];
  Transaction [ shape=diamond ];
  UnlockMintingPolicy;
  LockBoxValidator2 [ label = "LockBoxValidator with `ki - k` `MCToken`s\nuniquely identified with `LockBoxOracleMintingPolicy`"];
  Recipient [ label = "Recipient" ] ;
  DistributedSetNode1 [ label = "Distributed set node 1"];
  DistributedSetNode2 [ label = "Distributed set node 2"];

  LockBoxValidator1 -> Transaction [ label = "input" ];
  LockBoxValidator1 -> Recipient [ label = "`k` `MCToken`s are transferred to", style=dashed ];
  Transaction -> LockBoxValidator2 [ label = "output" ];

  DistributedSetNode -> Transaction [ label = "input" ];
  MerkleRoot -> Transaction [ label = "reference input" ];
  Transaction -> DistributedSetNode1 [ label = "output" ];
  Transaction -> DistributedSetNode2 [ label = "output" ];
  Transaction -> UnlockMintingPolicy [ label = "mints `k` tokens" ];
  Transaction -> Recipient [ label = "output" ];

  // UnlockMintingPolicy -> Recipient [ label = "is paid to", style=dashed ];
}
