SHELL := bash
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
.PHONY: dev build test check-format update-scripts format spago2nix

BROWSER_RUNTIME ?= 1

ps-sources := $(shell fd -epurs)
js-sources := $(shell fd -ejs)
dhall-sources := $(shell fd -edhall)
trustless-sidechain-serialise=cabal run -v0 trustless-sidechain-serialise --
onchain-dir := ../onchain/
plutus-scripts := $(patsubst %,Scripts/%,$(shell (cd $(onchain-dir) && $(trustless-sidechain-serialise) --plutus-scripts-targets)))
haskell-scripts := $(wildcard $(onchain-dir)/src/TrustlessSidechain/*.hs)

ps-entrypoint := Main
ps-test-entrypoint := Test.Main

dev: output.js
	@BROWSER_RUNTIME=${BROWSER_RUNTIME} webpack-dev-server --progress

build: output.js
	@BROWSER_RUNTIME=${BROWSER_RUNTIME} webpack --mode=production

test: src/RawScripts.purs
	@spago test -m ${ps-test-entrypoint}

check-format:
	@purs-tidy check ${ps-sources}
	@eslint ${js-sources}
	@dhall lint --check ${dhall-sources}

format:
	@purs-tidy format-in-place ${ps-sources}
	@eslint --fix ${js-sources}
	@dhall lint ${dhall-sources}

spago2nix:
	@spago2nix generate
	@nixpkgs-fmt spago-packages.nix

update-scripts: src/RawScripts.purs

output.js: src/Main.purs src/RawScripts.purs
	@spago bundle-module -m ${ps-entrypoint} -t $@

main.js: src/Main.purs src/RawScripts.purs
	@spago bundle-app -m ${ps-entrypoint} -t $@

# RawScripts.purs is an autogenerated file that collects all the .plutus scripts
# and allows our ctl code to reference them without relying on directory
# structure
src/RawScripts.purs: ${plutus-scripts}
	@>$@
	@{
	echo '-- WARNING: This file is autogenerated. Do not modify by hand. Instead:'
	echo '-- › Add your updated scripts to $$project/app/serialise/Main.hs'
	echo '-- › Manually run `make update-scripts` in this directory to update `src/RawScripts.purs`'
	echo 'module RawScripts'
	leading='('
	for script in ${plutus-scripts}; do
		echo "  $$leading raw$$(basename $$script | sed 's/.plutus$$//')"
		leading=','
	done
	echo '  ) where'
	echo
	for script in ${plutus-scripts}; do
		name=raw$$(basename $$script | sed 's/.plutus$$//')
		jq -c . $$script \
		| sed 's/.*/  """&"""\n/' \
		| sed "1i $$name =" \
		| sed "1i $$name ∷ String"
	done
	} | sed '$$d' >> $@
	@echo 'Updated $@'

# A rule to express the dependency of Plutus scripts to their corresponding
# Haskell files.
${plutus-scripts}&: ../onchain/src/TrustlessSidechain/*.hs | Scripts
	@echo "Generating: ${plutus-scripts}"
	cd $(onchain-dir) && $(trustless-sidechain-serialise) --plutus-scripts-output-dir $(CURDIR)/Scripts

Scripts:
	mkdir $@
