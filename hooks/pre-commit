#!/usr/bin/env bash
set +e

die() {
	code=$?
	echo "$@" >&2 && exit $code
}

check() {
	command -v "$1" >/dev/null \
		|| die "please enter a shell environment where \`$1\` is present," \
		       "then commit your changes."
  # Note from Koz: We use $* here on purpose, as we _want_ the arguments to be
  # treated as separate words, rather than a single quoted block. We use this to
  # execute whatever gets passed to 'check'.
  $* \
    || die "ERROR: precommit hook failed. Running \`make format-staged && git add .\` in the project root may fix this"
}

# If there are whitespace errors, print the offending file names and fail.
echo 'Checking whitespace...'
check make --no-print-directory check-format-whitespace

# Catch formatting errors
echo 'Checking Nix files...'
check make --no-print-directory check-format-nix-staged
echo 'Checking Cabal file...'
check make --no-print-directory check-format-cabal-staged
echo 'Checking flake...'
check make --no-print-directory lock_check
echo 'Checking Haskell files...'
check make --no-print-directory check-format-hs-staged
echo "Checking Purescript files..."
check make --no-print-directory check-format-purs-staged
echo "Checking JS files..."
check make --no-print-directory check-format-js-staged
echo "Checking Dhall files..."
check make --no-print-directory check-format-dhall-staged
