SHELL := bash
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c

BROWSER_RUNTIME ?= 1

ps-sources := $(shell fd -epurs)
plutus-scripts := $(wildcard Scripts/*.plutus)

ps-entrypoint := Main
ps-test-entrypoint := Test.Main

dev: output.js
	@BROWSER_RUNTIME=${BROWSER_RUNTIME} webpack-dev-server --progress

build: output.js
	@BROWSER_RUNTIME=${BROWSER_RUNTIME} webpack --mode=production

# Note. need a plutip-server running (won't put `plutip-server &` here because it tends to flood the terminal)
test: src/RawScripts.purs
	@spago test -m ${ps-test-entrypoint}

check-format:
	@purs-tidy check ${ps-sources}

format:
	@purs-tidy format-in-place ${ps-sources}

output.js: src/Main.purs src/RawScripts.purs
	@spago bundle-module -m ${ps-entrypoint} -t $@

main.js: src/Main.purs src/RawScripts.purs
	@spago bundle-app -m ${ps-entrypoint} -t $@
	@sed -i '1i #!/usr/bin/env node' $@
	@chmod +x $@

# RawScripts.purs is an autogenerated file that collects all the .plutus scripts
# and allows our ctl code to reference them without relying on directory
# structure
src/RawScripts.purs: ${plutus-scripts}
	@echo 'module RawScripts' > $@
	@echo '  ) where' >> $@
	@echo '' >> $@
	@for script in ${plutus-scripts}; do
		name=$$(basename $$script | sed 's/.plutus$$//')
		jq -c . $$script \
		| sed 's/.*/  """&"""\n/' \
		| sed "1i raw$$name =" \
		| sed "1i raw$$name âˆ· String" >> $@
		sed -i "2i\  , raw$$name" $@
	done
	@sed -i '2s/,/(/' $@
	@sed -i '$$d' $@

# Check that the script is newer than the haskell source file of the same name
# This errors rather than depending on a haskell binary in ../
# Invariant: Plutus scripts must correspond in name to Haskell files.
#            If this cannot be maintained, we can rely on other means to detect
#            freshness (oldest script to newest haskell file).
Scripts/%.plutus: ../src/TrustlessSidechain/OnChain/%.hs
	@echo Please update your plutus scripts by running 'cabal run trustless-sidechain-serialise'
	@echo on the project root.
	@exit 1
